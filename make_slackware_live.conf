# ---------------------------------------------------------------------------
# liveslak scripts by alienbob.
#
# Configuration file for "make_slackware_live.sh".
# Define your own custom values here to avoid editing the shell script.
# ---------------------------------------------------------------------------

# Examples:

# Kernel Version to use:
KVER=""
KGEN=$KVER

# Distro Version:
VERSION="2023.02.rc2"

# Custom name for the host:
LIVE_HOSTNAME="antis"

# Marker used for finding the Slackware Live files:
#MARKER="SLACKWARELIVE"

# The filesystem label of the ISO:
MEDIALABEL="ANTIS"

# The name of the directory used for storing persistence data:
#PERSISTENCE="persistence"

# What type of Live image?
LIVEDE="ANTIS"

# What runlevel to use if adding a DE like: XFCE, KDE4, PLASMA5 etc...
RUNLEVEL=3

# Name of the 'live' user account in the Live image:
#LIVEUID="live"

# Passwords for the user accounts in the Live image:
#ROOTPW="root"
#LIVEPW="live"

# Who built the live image:
BUILDER="MDrights"

# Slackware version to use (note: this won't work for Slackware <= 14.1):
SL_VERSION="15.0"

# Slackware architecture to install:
#SL_ARCH="x86_64"

# Root directory of a Slackware local mirror tree:
#SL_REPO="/home/ftp/pub/Linux/Slackware"
SL_REPO="/home/user/slackware-repo"

# The rsync URI of our default Slackware mirror server:
#SL_REPO_URL="rsync.osuosl.org::slackware"

# Directory where the live ISO image will be written:
#OUTPUT="/tmp"
OUTPUT=/home
TMP=/home/user/tmp

# --------------------------------------------------------- #
# -- This is how you can create your own custom Live OS: -- #
# --------------------------------------------------------- #

# REQUIRED:
# Define a new name for your own variant of Slackware Live Edition:
#LIVEDE="MDrights"

# REQUIRED:
# Define your own custom package sequence for a custom Live ISO.
# In this example you would need to create two files "pkglists/cinelerra.conf"
# and "pkglists/cinelerra.lst" defining the package location and package list
# respectively):
# A full install of XFCE. (no e,k,t,kde,kdei,y)
SEQ_CUSTOM="tagfile:a,ap,d,f,l,n,tcl,x,xap,xfce pkglist:mdrights-xfce"
#SEQ_CUSTOM="tagfile:a,ap,d,f,l,n,tcl,x,xap,xfce"

# OPTIONAL:
# Use something else than the name "min",
# for the package list containing the generic kernel:
#MINLIST="min"

# OPTIONAL:
# Your custom distro name (will reflect in boot screen & filenames):
# Oops, cannot customise as the SL_REPO is slackware-repo...
DISTRO="slackware"

# OPTIONAL:
# Marker used for finding the Slackware Live files:
#MARKER="CINELERRA"

# OPTIONAL:
# The filesystem label of the ISO:
MEDIALABEL="ANTIS"

# OPTIONAL:
# The ISO main directory:
#LIVEMAIN="cinelerra"

# OPTIONAL:
# Custom kernel boot parameters for your Live OS:
#KAPPEND="threadirqs"

# OPTIONAL:
# Add your own Live OS customizations to the function custom_config() :
custom_config() {
  # Add your own stuff here which is not covered in the main script:
  # ======== Added by MD ========

  # Copy my config files and small standalone apps.
  mkdir -p ${LIVE_ROOTDIR}/etc/
  mkdir -p ${LIVE_ROOTDIR}/opt/

  for FILE in ${LIVE_TOOLDIR}/rootcopy/etc*.txz ; do
    tar -xf ${FILE} -C ${LIVE_ROOTDIR}/etc/
  done
  chown -R root:root ${LIVE_ROOTDIR}/etc/

  for FILE in ${LIVE_TOOLDIR}/rootcopy/opt*.txz ; do
    tar -xf ${FILE} -C ${LIVE_ROOTDIR}/opt/
  done

  # Install some fonts:
  for FILE in ${LIVE_TOOLDIR}/rootcopy/font-*.txz ; do
    tar -xf ${FILE} -C ${LIVE_ROOTDIR}/ || echo 'That is okay.'
  done


  # Create group and user for Tor:
  chroot ${LIVE_ROOTDIR} /usr/sbin/groupadd -g 220 tor
  chroot ${LIVE_ROOTDIR} /usr/sbin/useradd -c "Tor Service Account" -u 220 -g 220 -d /dev/null -s /bin/false tor

  # Create group and user for Avahi:
  chroot ${LIVE_ROOTDIR} /usr/sbin/groupadd -g 214 avahi
  chroot ${LIVE_ROOTDIR} /usr/sbin/useradd  -u 214 -g 214 -c "Avahi" -d /dev/null -s /bin/false avahi

  # Create group and user for privoxy:
  chroot ${LIVE_ROOTDIR} /usr/sbin/groupadd -g 206 privoxy
  chroot ${LIVE_ROOTDIR} /usr/sbin/useradd  -u 206 -g 206 -c "privoxy" -d /dev/null -s /bin/false privoxy

  # Create group and user for Syncthing:
  chroot ${LIVE_ROOTDIR} /usr/sbin/groupadd -g 307 syncthing
  chroot ${LIVE_ROOTDIR} /usr/sbin/useradd -d /var/lib/syncthing -g syncthing -s /bin/bash -u 307 syncthing

  # Create group and user for dnscrypt-proxy:
  chroot ${LIVE_ROOTDIR} /usr/sbin/groupadd -g 293 dnscrypt
  chroot ${LIVE_ROOTDIR} /usr/sbin/useradd -u 293 -g 293 -c "DNSCrypt" -d /run/dnscrypt -s /bin/false dnscrypt

  # Create group and user for pcsc-lite:
  chroot ${LIVE_ROOTDIR} /usr/sbin/groupadd -g 257 pcscd
  chroot ${LIVE_ROOTDIR} /usr/sbin/useradd  -u 257 -g pcscd -d /var/run/pcscd -s /bin/false pcscd

  # Create group and user for Docker:
  chroot ${LIVE_ROOTDIR} /usr/sbin/groupadd -r -g 281 docker
  chroot ${LIVE_ROOTDIR} /usr/sbin/usermod -a -G docker live

  # Settings for rootless Podman:
  echo 'user.max_user_namespaces=30111' >> ${LIVE_ROOTDIR}/etc/sysctl.conf
  echo "${LIVEUID}:100000:65536" >> ${LIVE_ROOTDIR}/etc/subuid
  echo "${LIVEUID}:100000:65536" >> ${LIVE_ROOTDIR}/etc/subgid


  # Install hardened Firefox user.js:
  #  cat /home/user/repo/LiveSlak/skel/user.js > ${LIVE_ROOTDIR}/home/${LIVEUID}/.mozilla/firefox/${LIVEUID}_profile.default/user.js
  #  cat << EOT > ${LIVE_ROOTDIR}/home/${LIVEUID}/.mozilla/firefox/${LIVEUID}_profile.default/user.js
  #EOT

}
